# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-28 03:27
from __future__ import unicode_literals

from django.db import migrations

import os
from sys import path
from project.models import rt, stops, rt_stop;
from django.shortcuts import render, redirect, get_object_or_404
from django.core.urlresolvers import reverse
from django.contrib.auth.decorators import login_required
from django.contrib.auth.models import User
from django.contrib.auth import login, authenticate
from django.db import transaction
from django.http import HttpResponse, Http404
from django import forms

data_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../data'));

def get_data(apps, schema_editor):
	#fixture_file = os.path.join(fixture_dir, fixture_filename)

    #fixture = open(fixture_file, 'rb')
	rt.objects.all().delete();
	stops.objects.all().delete();
	rt_stop.objects.all().delete();
	rt_file = os.path.join(data_dir, "routes.csv");
	rts = open(rt_file, 'rb');
	for line in rts:
		rt_no, rt_name = line.split(",");
		print rt_no;
		RT = rt.objects.filter(rt_no__exact=rt_no);
		if not RT:
			new_rt = rt(rt_no=rt_no,rt_name=rt_name);
			new_rt.save();
	rts.close();
	stops_file = os.path.join(data_dir, "stops.csv");
	stopss = open(stops_file, 'rb');
	for line in stopss:
		stop_id, stop_name, stop_long, stop_lat = line.split(",");
		print stop_name;
		stop_id = int(stop_id);
		STOP = stops.objects.filter(stop_id__exact=stop_id);
		if not STOP:
			stop_long = float(stop_long);
			stop_lat = float(stop_lat);
			new_stop = stops(stop_id=stop_id,stop_name=stop_name,stop_long=stop_long,stop_lat=stop_lat);
			new_stop.save();
	stopss.close();
	rs_file = os.path.join(data_dir, "rt_stop.csv");
	rss = open(rs_file, 'rb');
	for line in rss:
		rt_no, dir, stop_id, dist = line.split(",");
		stop_id = int(stop_id);
		dist = float(dist);
		route = rt.objects.get(rt_no=rt_no);
		stop = stops.objects.get(stop_id=stop_id);
		if not route or not stop:
			continue;
		print dist;
		RS = rt_stop.objects.filter(rt_no__exact=route,stop_id__exact=stop,dir__exact=dir);
		if not RS:
			new_rs = rt_stop(rt_no=route,dir=dir,stop_id=stop,dist=dist);
			new_rs.save();
	rss.close();


class Migration(migrations.Migration):

    dependencies = [
        ('project', '0006_load_route_and_stop_data'),
    ]

    operations = [
		migrations.RunPython(get_data),
    ]
